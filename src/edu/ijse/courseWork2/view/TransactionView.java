/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.courseWork2.view;

import edu.ijse.courseWork2.controller.BookController;
import edu.ijse.courseWork2.controller.MemberController;
import edu.ijse.courseWork2.controller.TransactionController;
import edu.ijse.courseWork2.dto.MemberDto;
import edu.ijse.courseWork2.dto.BookDto;
import edu.ijse.courseWork2.dto.TransactionDto;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Isuru Manchanayake
 */
public class TransactionView extends javax.swing.JFrame {
    
    private TransactionController transactionController;
    private MemberController memberController;
    private BookController bookController;

    /**
     * Creates new form TransactionView
     */
    public TransactionView() {
        initComponents();
        transactionController = new TransactionController();
        memberController = new MemberController();
        bookController = new BookController();
        toDay();
        loadTable();
        bookQty();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtnSave1 = new javax.swing.JButton();
        jLTransaction = new javax.swing.JLabel();
        jLTrnsId = new javax.swing.JLabel();
        jTxtTrnsId = new javax.swing.JTextField();
        jLMemId = new javax.swing.JLabel();
        jTxtMemId = new javax.swing.JTextField();
        jBtnMemSearch = new javax.swing.JButton();
        jLMemDetail = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLBookId = new javax.swing.JLabel();
        jTxtBookId = new javax.swing.JTextField();
        jBtnBookSearch = new javax.swing.JButton();
        jLBookDetail = new javax.swing.JLabel();
        jLBorrow = new javax.swing.JLabel();
        jTxtBorrow = new javax.swing.JTextField();
        jLDue = new javax.swing.JLabel();
        jTxtDue = new javax.swing.JTextField();
        jLBQty = new javax.swing.JLabel();
        jTxtBQty = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableTrans = new javax.swing.JTable();
        jBtnUpdate = new javax.swing.JButton();
        jBtnSave = new javax.swing.JButton();
        jBtnDelete = new javax.swing.JButton();

        jBtnSave1.setBackground(new java.awt.Color(102, 0, 102));
        jBtnSave1.setForeground(new java.awt.Color(255, 255, 255));
        jBtnSave1.setText("Save");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Transaction Form");

        jLTransaction.setBackground(new java.awt.Color(255, 102, 102));
        jLTransaction.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLTransaction.setForeground(new java.awt.Color(0, 102, 102));
        jLTransaction.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLTransaction.setText("TRANSACTION DETAILS");

        jLTrnsId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLTrnsId.setText("Transaction Id");

        jLMemId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLMemId.setText("Member Id");

        jBtnMemSearch.setBackground(new java.awt.Color(153, 255, 153));
        jBtnMemSearch.setText("Search");
        jBtnMemSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnMemSearchActionPerformed(evt);
            }
        });

        jLMemDetail.setBackground(new java.awt.Color(204, 255, 255));

        jSeparator1.setForeground(new java.awt.Color(0, 153, 153));

        jLBookId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLBookId.setText("Book Id");

        jBtnBookSearch.setBackground(new java.awt.Color(153, 153, 255));
        jBtnBookSearch.setText("Search");
        jBtnBookSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnBookSearchActionPerformed(evt);
            }
        });

        jLBookDetail.setBackground(new java.awt.Color(204, 255, 255));

        jLBorrow.setText("Borrow date");

        jTxtBorrow.setBackground(new java.awt.Color(255, 255, 204));

        jLDue.setText("Due Date");

        jTxtDue.setBackground(new java.awt.Color(255, 255, 204));

        jLBQty.setText("Book Qty");

        jTxtBQty.setBackground(new java.awt.Color(255, 255, 204));

        jTableTrans.setBackground(new java.awt.Color(204, 102, 255));
        jTableTrans.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableTrans.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableTransMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableTrans);

        jBtnUpdate.setBackground(new java.awt.Color(102, 0, 102));
        jBtnUpdate.setForeground(new java.awt.Color(255, 255, 255));
        jBtnUpdate.setText("Update");
        jBtnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnUpdateActionPerformed(evt);
            }
        });

        jBtnSave.setBackground(new java.awt.Color(102, 0, 102));
        jBtnSave.setForeground(new java.awt.Color(255, 255, 255));
        jBtnSave.setText("Save");
        jBtnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSaveActionPerformed(evt);
            }
        });

        jBtnDelete.setBackground(new java.awt.Color(102, 0, 102));
        jBtnDelete.setForeground(new java.awt.Color(255, 255, 255));
        jBtnDelete.setText("Delete");
        jBtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLTransaction, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLMemId, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jTxtMemId, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBtnMemSearch)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLMemDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLTrnsId, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTxtTrnsId, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jTxtBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jBtnBookSearch)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLBookDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jLBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jTxtBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLDue, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtDue, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLBQty, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtBQty, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 45, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBtnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jBtnSave)
                        .addGap(19, 19, 19)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLTransaction, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLTrnsId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtTrnsId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLMemId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtMemId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBtnMemSearch)
                    .addComponent(jLMemDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jTxtBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBtnBookSearch))
                    .addComponent(jLBookDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLDue, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtDue, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtBorrow, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLBQty, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTxtBQty, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnUpdate)
                    .addComponent(jBtnSave)
                    .addComponent(jBtnDelete))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnMemSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnMemSearchActionPerformed
        searchMember();
    }//GEN-LAST:event_jBtnMemSearchActionPerformed

    private void jBtnBookSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnBookSearchActionPerformed
       searchBook();
    }//GEN-LAST:event_jBtnBookSearchActionPerformed

    private void jBtnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSaveActionPerformed
       saveTransaction();
    }//GEN-LAST:event_jBtnSaveActionPerformed

    private void jBtnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnUpdateActionPerformed
       updateTransaction();
    }//GEN-LAST:event_jBtnUpdateActionPerformed

    private void jTableTransMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableTransMouseClicked
       searchTransaction();
    }//GEN-LAST:event_jTableTransMouseClicked

    private void jBtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnDeleteActionPerformed
        deleteTransaction();
    }//GEN-LAST:event_jBtnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
 //   public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
     /*   try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
 //       java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new TransactionView().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnBookSearch;
    private javax.swing.JButton jBtnDelete;
    private javax.swing.JButton jBtnMemSearch;
    private javax.swing.JButton jBtnSave;
    private javax.swing.JButton jBtnSave1;
    private javax.swing.JButton jBtnUpdate;
    private javax.swing.JLabel jLBQty;
    private javax.swing.JLabel jLBookDetail;
    private javax.swing.JLabel jLBookId;
    private javax.swing.JLabel jLBorrow;
    private javax.swing.JLabel jLDue;
    private javax.swing.JLabel jLMemDetail;
    private javax.swing.JLabel jLMemId;
    private javax.swing.JLabel jLTransaction;
    private javax.swing.JLabel jLTrnsId;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTableTrans;
    private javax.swing.JTextField jTxtBQty;
    private javax.swing.JTextField jTxtBookId;
    private javax.swing.JTextField jTxtBorrow;
    private javax.swing.JTextField jTxtDue;
    private javax.swing.JTextField jTxtMemId;
    private javax.swing.JTextField jTxtTrnsId;
    // End of variables declaration//GEN-END:variables

    private void searchMember() {
        try {
          String memberID = jTxtMemId.getText();
          MemberDto memberDto = memberController.get(memberID);
          if(memberDto != null){
          jLMemDetail.setText(memberDto.getMemberName()+ " | "+memberDto.getAddress()+" | "+memberDto.getPhone());
          }else{
           jLMemDetail.setText("Member not found");}
      } catch (Exception e) {
          e.printStackTrace();
          JOptionPane.showMessageDialog(this, "Error at search Member");
      }
  }

    private void searchBook() {
         try {
          String bookId = jTxtBookId.getText();
          BookDto bookDto = bookController.get(bookId);
          if(bookDto != null){
             jLBookDetail.setText(bookDto.getBookName()+" | "+bookDto.getCategoryID()+" : "+bookDto.getAuthor()+" : QtyOnHand "+bookDto.getQty());
          }else{
            jLBookDetail.setText("Book not found");
          }
      } catch (Exception e) {
          e.printStackTrace();
          JOptionPane.showMessageDialog(this, "Error at search Book");
      }
  }

    private void saveTransaction() {
        try {
              TransactionDto dto = new TransactionDto(
                      jTxtTrnsId.getText(),
                      jTxtMemId.getText(),
                      jTxtBookId.getText(),
                      jTxtBorrow.getText(),
                      jTxtDue.getText(),
                      Integer.parseInt(jTxtBQty.getText())
              );
                      
              
              String resp = transactionController.save(dto);
              
              JOptionPane.showMessageDialog(this, resp);
              clearForm();
              loadTable();
            
        } catch (Exception e) {
              JOptionPane.showMessageDialog(this, "Error at save data");
              clearForm();
        }
    
    }

    private void clearForm() {
       jTxtTrnsId.setText("");
       jTxtMemId.setText("");
       jTxtBookId.setText("");
       jTxtBorrow.setText("");
       jTxtDue.setText("");
       jTxtBQty.setText("");
       jLBookDetail.setText("");
       jLMemDetail.setText("");
    }

    private void loadTable() {
       try {
            String columns[]={"Transaction ID","Member ID","Book ID","Borrow Date","Due Date", "No. Of Qty"};
           DefaultTableModel dtm=new DefaultTableModel(columns,0){
               @Override
              public boolean isCellEditable(int row, int column){
                 return false;
              }
           };
           jTableTrans.setModel(dtm);
           
           ArrayList<TransactionDto>transactionDtos = transactionController.getAll();
           for(TransactionDto dto : transactionDtos){
             Object[] rowData = {
                 dto.getTransactionId(),
                 dto.getMemberId(),
                 dto.getBookId(),
                 dto.getBorrowDate(),
                 dto.getDueDate(),
                 dto.getNoOfBook(),
                 };
             dtm.addRow(rowData);
           }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error at loading Data to Transaction table");
        }
    }

    private void updateTransaction() {
         try {
      TransactionDto transactionDto=new TransactionDto(
              jTxtTrnsId.getText(),
                      jTxtMemId.getText(),
                      jTxtBookId.getText(),
                      jTxtBorrow.getText(),
                      jTxtDue.getText(),
                      Integer.parseInt(jTxtBQty.getText()));
              
          String resp = transactionController.update(transactionDto);
           // System.out.println(resp);
            JOptionPane.showMessageDialog(this, resp);
             System.out.println(resp);
            loadTable();
            clearForm();
            
        } catch (Exception ex) {
           // Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(this, "Error at update data");
           clearForm();
           
        }
      
     }

    private void searchTransaction() {
        try {
       String transactionId = jTableTrans.getValueAt(jTableTrans.getSelectedRow(), 0).toString();
       TransactionDto dto=transactionController.get(transactionId);
       
       if(dto != null){
          jTxtTrnsId.setText(dto.getTransactionId());
          jTxtMemId.setText(dto.getMemberId());
          jTxtBookId.setText(dto.getBookId());
          jTxtBorrow.setText(dto.getBorrowDate());
          jTxtDue.setText(dto.getDueDate());
          jTxtBQty.setText(Integer.toString(dto.getNoOfBook()));
          
       }else{
          JOptionPane.showMessageDialog(this, "Transaction not found");
       }
     } catch (Exception e) {
         JOptionPane.showMessageDialog(this, "Error at loading Transaction Detail");
     }
 }

    private void deleteTransaction() {
        try {
         String transactionId = jTxtTrnsId.getText();
         String resp = transactionController.delete(transactionId);
         JOptionPane.showMessageDialog(this, resp);
            clearForm();
            loadTable();
         
     } catch (Exception e) {
         JOptionPane.showMessageDialog(this, "Error at Cancel Transaction");
     }
 }
    
    private void toDay(){
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String date = sdf.format(new Date());
            jTxtBorrow.setText(date);
    }

    private void bookQty() {
        jTxtBQty.setText(String.valueOf(01));
    }
}
