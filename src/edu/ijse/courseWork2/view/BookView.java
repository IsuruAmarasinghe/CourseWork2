/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edu.ijse.courseWork2.view;

import edu.ijse.courseWork2.controller.BookController;
import edu.ijse.courseWork2.dto.BookDto;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Isuru Manchanayake
 */
public class BookView extends javax.swing.JFrame {

    private BookController bookController;

    /**
     * Creates new form BookView
     */
    public BookView() throws Exception {
        initComponents();
        bookController = new BookController();
        loadTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelBookName1 = new javax.swing.JLabel();
        jTextFieldBookName1 = new javax.swing.JTextField();
        jLabelBook = new javax.swing.JLabel();
        jLabelBookID = new javax.swing.JLabel();
        jTextFieldBookId = new javax.swing.JTextField();
        jLabelBookName = new javax.swing.JLabel();
        jTextFieldBookName = new javax.swing.JTextField();
        jLabelAuthor = new javax.swing.JLabel();
        jTextFieldAuthor = new javax.swing.JTextField();
        jLabelPublisher = new javax.swing.JLabel();
        jTextFieldPublisher = new javax.swing.JTextField();
        jLabelPublishYear = new javax.swing.JLabel();
        jTextFieldPubYear = new javax.swing.JTextField();
        jLabelCateID = new javax.swing.JLabel();
        jTextFieldCateID = new javax.swing.JTextField();
        jLabelQty = new javax.swing.JLabel();
        jTextFieldQty = new javax.swing.JTextField();
        jButtonSave = new javax.swing.JButton();
        jButtonUpdate = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jScrollPaneBook = new javax.swing.JScrollPane();
        jTableBook = new javax.swing.JTable();

        jLabelBookName1.setText("Book Name");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 204, 255));

        jLabelBook.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabelBook.setForeground(new java.awt.Color(0, 0, 153));
        jLabelBook.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelBook.setText("SCIENCE LIBRARY - BOOKS STORE");

        jLabelBookID.setText("Book ID");

        jTextFieldBookId.setBackground(new java.awt.Color(255, 255, 204));

        jLabelBookName.setText("Book Name");

        jTextFieldBookName.setBackground(new java.awt.Color(255, 255, 204));

        jLabelAuthor.setText("Author");

        jTextFieldAuthor.setBackground(new java.awt.Color(255, 255, 204));

        jLabelPublisher.setText("Publisher");

        jTextFieldPublisher.setBackground(new java.awt.Color(255, 255, 204));

        jLabelPublishYear.setText("Publication Year");

        jTextFieldPubYear.setBackground(new java.awt.Color(255, 255, 204));

        jLabelCateID.setText("Category ID");

        jTextFieldCateID.setBackground(new java.awt.Color(255, 255, 204));

        jLabelQty.setText("Qty");

        jTextFieldQty.setBackground(new java.awt.Color(255, 255, 204));

        jButtonSave.setBackground(new java.awt.Color(153, 255, 153));
        jButtonSave.setForeground(new java.awt.Color(102, 0, 102));
        jButtonSave.setText("Save");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonUpdate.setBackground(new java.awt.Color(0, 204, 204));
        jButtonUpdate.setForeground(new java.awt.Color(102, 0, 102));
        jButtonUpdate.setText("Update");
        jButtonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUpdateActionPerformed(evt);
            }
        });

        jButtonDelete.setBackground(new java.awt.Color(204, 204, 0));
        jButtonDelete.setForeground(new java.awt.Color(51, 0, 51));
        jButtonDelete.setText("Delete");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        jTableBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTableBook.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableBookMouseClicked(evt);
            }
        });
        jScrollPaneBook.setViewportView(jTableBook);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabelBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jTextFieldBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabelBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jTextFieldBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabelPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30)
                                    .addComponent(jTextFieldPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabelAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30)
                                    .addComponent(jTextFieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButtonDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonUpdate)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButtonSave))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelQty, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jTextFieldQty, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabelPublishYear, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(jTextFieldPubYear, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(jLabelCateID, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jTextFieldCateID, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(33, 33, 33))))
            .addComponent(jScrollPaneBook)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabelBook, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBookID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBookId, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldBookName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelPublishYear, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPubYear, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelCateID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldCateID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelQty, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldQty, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonSave)
                    .addComponent(jButtonUpdate)
                    .addComponent(jButtonDelete))
                .addGap(18, 18, 18)
                .addComponent(jScrollPaneBook, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        saveBook();
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUpdateActionPerformed
        updateBook();
    }//GEN-LAST:event_jButtonUpdateActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        CancelBook();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    private void jTableBookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableBookMouseClicked
        searchBook();
    }//GEN-LAST:event_jTableBookMouseClicked

    /**
     * @param args the command line arguments
     */
 //   public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
    /*   try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>

        /* Create and display the form */
 //       java.awt.EventQueue.invokeLater(new Runnable() {
 //           public void run() {
 //               new BookView().setVisible(true);
 //           }
 //       });
 //   }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonUpdate;
    private javax.swing.JLabel jLabelAuthor;
    private javax.swing.JLabel jLabelBook;
    private javax.swing.JLabel jLabelBookID;
    private javax.swing.JLabel jLabelBookName;
    private javax.swing.JLabel jLabelBookName1;
    private javax.swing.JLabel jLabelCateID;
    private javax.swing.JLabel jLabelPublishYear;
    private javax.swing.JLabel jLabelPublisher;
    private javax.swing.JLabel jLabelQty;
    private javax.swing.JScrollPane jScrollPaneBook;
    private javax.swing.JTable jTableBook;
    private javax.swing.JTextField jTextFieldAuthor;
    private javax.swing.JTextField jTextFieldBookId;
    private javax.swing.JTextField jTextFieldBookName;
    private javax.swing.JTextField jTextFieldBookName1;
    private javax.swing.JTextField jTextFieldCateID;
    private javax.swing.JTextField jTextFieldPubYear;
    private javax.swing.JTextField jTextFieldPublisher;
    private javax.swing.JTextField jTextFieldQty;
    // End of variables declaration//GEN-END:variables

    private void saveBook() {
          try {
              BookDto dto = new BookDto(jTextFieldBookId.getText(),
                      jTextFieldBookName.getText(),
                      jTextFieldAuthor.getText(),
                      jTextFieldPublisher.getText(),
                      Integer.parseInt(jTextFieldPubYear.getText()),
                      jTextFieldCateID.getText(),
                      Integer.parseInt(jTextFieldQty.getText()));
              
              String resp = bookController.save(dto);
              
              JOptionPane.showMessageDialog(this, resp);
              clearForm();
              loadTable();
            
        } catch (Exception e) {
              JOptionPane.showMessageDialog(this, "Error at save data");
              clearForm();
        }
    
    }

    private void clearForm() {
       jTextFieldBookId.setText(" ");
       jTextFieldBookName.setText(" ");
       jTextFieldAuthor.setText(" ");
       jTextFieldPublisher.setText(" ");
       jTextFieldPubYear.setText(" ");
       jTextFieldCateID.setText(" ");
       jTextFieldQty.setText(" ");
    
    }

    private void loadTable() {
        try {
            String columns[]={"Book ID","Book Name","Author","Publisher","Publish Year", "Category ID", "QtyOnHand"};
           DefaultTableModel dtm=new DefaultTableModel(columns,0){
               @Override
              public boolean isCellEditable(int row, int column){
                 return false;
              }
           };
           jTableBook.setModel(dtm);
           
           ArrayList<BookDto>bookDtos = bookController.getAll();
           for(BookDto dto : bookDtos){
             Object[] rowData = {
                 dto.getBookID(),
                 dto.getBookName(),
                 dto.getAuthor(),
                 dto.getPublisher(),
                 dto.getPublicationYear(),
                 dto.getCategoryID(),
                 dto.getQty()};
             dtm.addRow(rowData);
           }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error at loading Data to books table");
        }
    }

    private void searchBook() {
        try {
       String bookID = jTableBook.getValueAt(jTableBook.getSelectedRow(), 0).toString();
       BookDto dto=bookController.get(bookID);
       
       if(dto != null){
          jTextFieldBookId.setText(dto.getBookID());
          jTextFieldBookName.setText(dto.getBookName());
          jTextFieldAuthor.setText(dto.getAuthor());
          jTextFieldPublisher.setText(dto.getPublisher());
          jTextFieldPubYear.setText(Integer.toString(dto.getPublicationYear()));
          jTextFieldCateID.setText(dto.getCategoryID());
          jTextFieldQty.setText(Integer.toString(dto.getQty()));
       }else{
          JOptionPane.showMessageDialog(this, "Item not found");
       }
     } catch (Exception e) {
         JOptionPane.showMessageDialog(this, "Error at loading Item");
     }
 }
    
     
     private void updateBook(){
    try {
      BookDto bookDto=new BookDto(jTextFieldBookId.getText(),jTextFieldBookName.getText(),jTextFieldAuthor.getText(),
              jTextFieldPublisher.getText(),Integer.parseInt(jTextFieldPubYear.getText()), jTextFieldCateID.getText(),
              Integer.parseInt(jTextFieldQty.getText()));
          String resp = bookController.update(bookDto);
           // System.out.println(resp);
            JOptionPane.showMessageDialog(this, resp);
            loadTable();
            clearForm();
            
        } catch (Exception ex) {
           // Logger.getLogger(ItemView.class.getName()).log(Level.SEVERE, null, ex);
           JOptionPane.showMessageDialog(this, "Error at update data");
           clearForm();
           
        }
      
     }

    private void CancelBook() {
        try {
         String bookID = jTextFieldBookId.getText();
         String resp = bookController.delete(bookID);
         JOptionPane.showMessageDialog(this, resp);
            clearForm();
            loadTable();
         
     } catch (Exception e) {
         JOptionPane.showMessageDialog(this, "Error at Cancel Item");
     }
 }
}
